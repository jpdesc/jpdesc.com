<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JPDESC Codes - misc</title><link href="https://jpdesc.com/" rel="alternate"></link><link href="https://jpdesc.com/feeds/misc.atom.xml" rel="self"></link><id>https://jpdesc.com/</id><updated>2022-12-30T00:00:00+00:00</updated><subtitle>Software Developer</subtitle><entry><title>CI/CD Jenkins Project</title><link href="https://jpdesc.com/cicd-jenkins-project.html" rel="alternate"></link><published>2022-12-30T00:00:00+00:00</published><updated>2022-12-30T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-12-30:/cicd-jenkins-project.html</id><summary type="html">&lt;p&gt;As a continuation of recent forays into automation with Ansible, I decided to up my DevOps game further by creating a Jenkins CI/CD pipeline for my wellness app. This would allow me to automate the testing and deployment of my application, ensuring that code changes aren’t breaking the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As a continuation of recent forays into automation with Ansible, I decided to up my DevOps game further by creating a Jenkins CI/CD pipeline for my wellness app. This would allow me to automate the testing and deployment of my application, ensuring that code changes aren’t breaking the app’s functionality. Once completed, this project has allowed me greater freedom to devote my time and mental resources on improving the application without having to manually test and troubleshoot its deployment-related processes.&lt;/p&gt;
&lt;p&gt;My first steps involved setting up a virtual server with Jenkins and learning how to create and execute simple builds using declarative pipelines, which are used to describe different portions of the software delivery process. After a bit of basic tinkering, I set about creating a specific pipeline to test my application’s code each time I push a new commit, deploying when all functional tests have passed.&lt;/p&gt;
&lt;p&gt;Ultimately, I broke down my builds into 5 distinct stages:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;
download app dependencies in a virtual environment and server setup. This step required creating a simple ansible playbook, to be triggered by Jenkins. The ansible playbook is in a file called build.yaml in my project’s root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Checkout:&lt;/strong&gt;
Checkout the project from git within the Jenkins workspace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Build:&lt;/strong&gt;
Run the actual project in the virtual environment. This step is testing the app’s basic execution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test:&lt;/strong&gt;
This step involved running all of my functional tests, ensuring that no changes are impacting the functionality of each route within the app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deploy:&lt;/strong&gt;
Checkout the most recent updates on the app’s root directory/server (separate server from Jenkins).&lt;/p&gt;
&lt;p&gt;Given that this was my first Jenkins project, it was a relatively slow and iterative process getting everything to function as I wanted (took about 170 builds to get right!). Once I eventually had a working and complete Jenkinsfile, I found that Jenkins was repeatedly hanging on the testing step.&lt;/p&gt;
&lt;p&gt;I set about changing the default debugging settings by creating a &lt;em&gt;'logging.properties'&lt;/em&gt; file and passing the settings to Jenkins at runtime. To pass specific configurations to Jenkins at runtime, I set specific environment variables within the &lt;em&gt;'override.conf'&lt;/em&gt; file, which can be accessed using &lt;em&gt;‘systemctl edit jenkins’&lt;/em&gt; on Ubuntu-based servers. Adding the following line to that file enables the settings from the logging.properties file to take precedence (will vary depending on location of &lt;em&gt;'logging.properties'&lt;/em&gt; file):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Environment=&amp;quot;JAVA_OPTS=-Djava.util.logging.config.file=/etc/systemd/system/jenkins.service.d/logging.properties&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After optimizing the logs and doing some research, I diagnosed the issue as a memory problem and set about tinkering with the JVM settings related to memory optimization and garbage collection. The following configurations (also in override.conf) fixed my issue, allowing the full pipeline to run without a hitch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Environment=&amp;quot;JAVA_OPTS=-Xmx1024m -Xms1024m&amp;quot;
Environment=&amp;quot;JAVA_OPTS=-XX:+UseG1GC -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:+UseCompressedOops&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first set of commands increased the starting and maximum JVM memory heap to 1gb, which otherwise defaults to 1/64th of the physical memory up to 1gb, which in this case amounted to a much smaller allocation. The second grouping of variables changes the garbage collection to G1, which optimizes GC pause times by dynamically running parallel threads leading to greater throughput. The ‘UseCompressedOops’ command shrinks an object’s pointer from 64bit to 32bit.&lt;/p&gt;
&lt;p&gt;With these optimizations, I’ve been able to run my builds smoothly without a hitch. Jenkins is much more stable, ensuring that I get build feedback quickly and efficiently, enhancing my workflow significantly. As my project scales, I’d like to maybe experiment with implementing a controller-agent architecture to distribute the payload for each job amongst multiple agent machines.&lt;/p&gt;
&lt;p&gt;Below is my current Jenkinsfile for the project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipeline {
    agent any

    stages {
        stage(&amp;#39;Setup&amp;#39;) {
            steps {
                ansiblePlaybook installation: &amp;#39;Ansible&amp;#39;, playbook: &amp;#39;build.yaml&amp;#39;
            }

        }
        stage(&amp;#39;Checkout&amp;#39;) {
            steps {
                checkout([$class: &amp;#39;GitSCM&amp;#39;, branches: [[name: &amp;#39;main&amp;#39;]], extensions: [], userRemoteConfigs: [[url: &amp;#39;https://github.com/jpdesc/Oura-Tracker-App.git&amp;#39;]]])
            }
        }
        stage(&amp;#39;Build&amp;#39;) {
            steps {
                git branch: &amp;#39;main&amp;#39;, url: &amp;#39;https://github.com/jpdesc/Oura-Tracker-App.git&amp;#39;
                sh &amp;quot;&amp;quot;&amp;quot;
                . /venvs/jenkins/bin/activate
                cat /srv/jenkins/.env &amp;gt; .env
                python run.py
                &amp;quot;&amp;quot;&amp;quot;
            }
        }
        stage(&amp;#39;Test&amp;#39;) {
            steps {
                sh &amp;quot;&amp;quot;&amp;quot;
                . /venvs/jenkins/bin/activate
                cat /srv/jenkins/.env &amp;gt; .env
                pytest ouraapp/tests/functional/
                &amp;quot;&amp;quot;&amp;quot;
            }
        }
        stage(&amp;#39;Deploy&amp;#39;) {
            steps {
                ansiblePlaybook installation: &amp;#39;Ansible&amp;#39;, inventory: &amp;#39;hosts&amp;#39;, playbook: &amp;#39;deploy.yaml&amp;#39;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="misc"></category></entry><entry><title>Another Project Update!</title><link href="https://jpdesc.com/another-project-update.html" rel="alternate"></link><published>2022-10-17T00:00:00+00:00</published><updated>2022-10-17T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-10-17:/another-project-update.html</id><summary type="html">&lt;p&gt;It’s been a long time since I’ve written a project update, and since my last post, I’ve been back to working consistently on my wellness dashboard project since July. Rather than write a long wall of text, here’s a list of some of the features I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It’s been a long time since I’ve written a project update, and since my last post, I’ve been back to working consistently on my wellness dashboard project since July. Rather than write a long wall of text, here’s a list of some of the features I’ve been able to tack on the past few months.&lt;/p&gt;
&lt;p&gt;&lt;a href="server.jpdesc.com"&gt;Jack’s Wellness App&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added icons to calendar and dashboard&lt;/li&gt;
&lt;li&gt;Automated deployment on virtual Ubuntu server via Ansible&lt;/li&gt;
&lt;li&gt;Insights page where I can filter the data based on my tags&lt;/li&gt;
&lt;li&gt;Workout template module to set up a base template for my weights workouts&lt;/li&gt;
&lt;li&gt;Live editing of weights workouts via REST API. I can now log my workouts from my phone!&lt;/li&gt;
&lt;li&gt;Cryptographically secured user login system&lt;/li&gt;
&lt;li&gt;Scores added to calendar&lt;/li&gt;
&lt;li&gt;Refactored code into distinct modules using Flask blueprints. This has made the project much cleaner and easier to work in!&lt;/li&gt;
&lt;li&gt;Refactoring of most of the code! As I’ve continued to add to the project, I’ve realized how much easier it is to work with clean, modularized code. My skills have also greatly improved, so of course I am finding areas to improve as I go.&lt;/li&gt;
&lt;li&gt;Automated database backup scripts to AWS S3 cloud service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am currently in the process of expanding my testing suite, and have begun working with Jenkins, a popular CI/CD platform that will help ensure that successive code changes to my production server won’t break the app. I am also going to dive into AWS quite a bit more as I look to round out my skillset in preparation for the job market.&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Deploying my Wellness App</title><link href="https://jpdesc.com/deploying-my-wellness-app.html" rel="alternate"></link><published>2022-08-10T00:00:00+00:00</published><updated>2022-08-10T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-08-10:/deploying-my-wellness-app.html</id><summary type="html">&lt;p&gt;I’ve recently been working a lot with Ansible, a configuration management platform, which allows users to automate the setup of their infrastructure. My biggest project to date has been completely automating the deployment of my wellness app with an Ansible playbook. Although it took a lot of toggling--particularly with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve recently been working a lot with Ansible, a configuration management platform, which allows users to automate the setup of their infrastructure. My biggest project to date has been completely automating the deployment of my wellness app with an Ansible playbook. Although it took a lot of toggling--particularly with regards to getting my database set up properly, the effort was well worth the satisfaction and comfort of knowing I can easily deploy to any virtual private server.&lt;/p&gt;
&lt;p&gt;Through the process, I learned quite a bit about networking, virtual servers and how to use several different types of config files. Through the sheer amount of time debugging and shuffling through my Ubuntu private server (from DigitalOcean) making adjustments and checking the results of my Ansible playbooks, I've gained a lot of skills in the Unix command line, which has had lots of carry-over into just about everything coding related I am working on.&lt;/p&gt;
&lt;p&gt;Check out my ansible playbook here:
&lt;a href="https://github.com/jpdesc/Oura-App-Ansible"&gt;Jack’s Wellness App Ansible Playbook&lt;/a&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>More Algo Practice</title><link href="https://jpdesc.com/more-algo-practice.html" rel="alternate"></link><published>2022-06-15T00:00:00+00:00</published><updated>2022-06-15T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-06-15:/more-algo-practice.html</id><summary type="html">&lt;p&gt;Recently, I’ve taken a bit of a break from developing my app and have been putting the bulk of my focus into practicing algorithms. I’ve been tackling the &lt;a href="https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU"&gt;Blind 75 Leetcode Problems&lt;/a&gt; , a curated list of leetcode problems grouped into type of problem/data structure with increasing difficulty …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I’ve taken a bit of a break from developing my app and have been putting the bulk of my focus into practicing algorithms. I’ve been tackling the &lt;a href="https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU"&gt;Blind 75 Leetcode Problems&lt;/a&gt; , a curated list of leetcode problems grouped into type of problem/data structure with increasing difficulty.&lt;/p&gt;
&lt;p&gt;My strategy for making the most of my learning so far has been to practice 2-3 problems each day, while taking detailed notes on each problem in an excel sheet. More specifically, I’ve been logging how difficult each problem is on the first pass, the type of problem and a written explanation of the solution. I found a helpful YouTube channel called &lt;a href="https://www.youtube.com/c/neetcode"&gt;Neetcode&lt;/a&gt; that has straightforward explanations of each problem’s solution(s) with discussion of time complexity and cleanest approaches.&lt;/p&gt;
&lt;p&gt;The repetition of practicing each day has started to catch on, as I am feeling decent on most Leetcode medium problems, whereas a few months ago, I was unable to crack any of the easy problems. I’m looking forward to seeing how this might impact the speed at which I am able to code in real-world problems, as it seems to have improved my problem-solving abilities greatly.&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Data Structures and Algorithms</title><link href="https://jpdesc.com/data-structures-and-algorithms.html" rel="alternate"></link><published>2022-04-21T00:00:00+00:00</published><updated>2022-04-21T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-04-21:/data-structures-and-algorithms.html</id><summary type="html">&lt;p&gt;In addition to my wellness app, I’ve also been focusing on improving my practical knowledge of data structures and algorithms. I am using AlgoExpert, a service which combines instructional videos on the different types of data structures with 160 practice problems. What I like about it so far is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In addition to my wellness app, I’ve also been focusing on improving my practical knowledge of data structures and algorithms. I am using AlgoExpert, a service which combines instructional videos on the different types of data structures with 160 practice problems. What I like about it so far is that the problems are categorized by data structure type, such that I can easily practice several problems that pertain to the same data structure. This allows me to develop more consistent approaches to problem solving for each data structure type. To supplement, I’ve started reading The Algorithm Design Manual by Steven Skiena. &lt;/p&gt;
&lt;p&gt;I am looking forward to improving my ability to find increasingly more time and space efficient approaches to my code. I’ve already noticed an awareness that previously wasn’t there with regards to certain structures like nested loops that are particularly expensive with regards to time. Where possible, I am making improvements, or at least starting to recognize the demands and constraints of certain types of algorithms within my code. &lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Wellness App Update</title><link href="https://jpdesc.com/wellness-app-update.html" rel="alternate"></link><published>2022-04-18T00:00:00+00:00</published><updated>2022-04-18T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-04-18:/wellness-app-update.html</id><summary type="html">&lt;p&gt;Over the past 3 weeks, I’ve really focused in on my wellness app project, consistently adding features bit by bit. I started out by using the Oura API to output my sleep metrics into a page with radio selectors to track my energy levels, mood, and focus on a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the past 3 weeks, I’ve really focused in on my wellness app project, consistently adding features bit by bit. I started out by using the Oura API to output my sleep metrics into a page with radio selectors to track my energy levels, mood, and focus on a given day. &lt;/p&gt;
&lt;p&gt;From there, I implemented a calendar page using fullcalendar. It was a bit arduous implementing date-click functionality, whereby a user can click on any date on the calendar page and be redirected to the individual day’s page. The reason I initially struggled here is largely due to the fact that fullcalendar boilerplate is in javascript, so changing a calendar’s functionality requires a bit of tinkering in javascript. In order to send the clicked date string to the back end, I learned how to use ajax to send a post request for use as a python variable.&lt;/p&gt;
&lt;p&gt;After improving the calendar to my liking, I’ve added a workout module to my tracker to log the intensity of workouts/soreness level, upload my workouts and take notes on them each time I work out. For my weightlifting workouts, I keep track of my progress in google sheets in a template with 4 different workouts that I cycle through. I am currently working on implementing a feature that will automatically upload the workout from google sheets into my app when I select weightlifting as my workout for the day. To do so, I’ve been working with the Google Sheets API to extract the data given whichever workout is next in the template. &lt;/p&gt;
&lt;p&gt;I’ve really enjoyed working in depth on this project, where I am continually adapting to new challenges. To highlight, I’ve made big strides in the following areas:&lt;/p&gt;
&lt;p&gt;•   Working with databases (SQLite--to be transferred to MySQL or Postrgres)&lt;br /&gt;
•   Using API’s (Google Sheets, Oura) &lt;br /&gt;
•   Improved ability to work within the contexts of web requests w/ Flask &lt;br /&gt;
•   Some Javascript—using jquery/AJAX to send post requests to front end &lt;br /&gt;
•   Managing a project’s growing complexity&lt;br /&gt;
•   Unit-testing in pytest  &lt;br /&gt;
•   Experience working with the wide array of Python standard and non-standard libraries  &lt;br /&gt;
•   Project management with Git  &lt;br /&gt;
•   Debugging practice  &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Project To-Do’s:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;•   Finish Google Sheets workout upload functionality  &lt;br /&gt;
•   Add forward and back buttons for each day  &lt;br /&gt;
•   Amend workout data functionality from app—changes carried over to google sheets  &lt;br /&gt;
•   Tags for each day and an insights page to show averages for days with a certain tag, etc..  &lt;br /&gt;
•   Add/edit calendar events manually  &lt;br /&gt;
•   Improve testing suite  &lt;br /&gt;
•   Refactor code   &lt;br /&gt;
•   Deploy with Ansibel  &lt;br /&gt;&lt;/p&gt;</content><category term="misc"></category></entry><entry><title>Wellness App Project</title><link href="https://jpdesc.com/wellness-app-project.html" rel="alternate"></link><published>2022-03-28T00:00:00+00:00</published><updated>2022-03-28T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-03-28:/wellness-app-project.html</id><summary type="html">&lt;p&gt;I’ve just started the very beginnings of a new coding project. As I’ve been studying Miguel Grinberg’s Flask book, I wanted to take a stab at my own project to implement some of the features I am learning about in a more creative environment. I find that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve just started the very beginnings of a new coding project. As I’ve been studying Miguel Grinberg’s Flask book, I wanted to take a stab at my own project to implement some of the features I am learning about in a more creative environment. I find that this helps my ability to grasp new concepts much more thoroughly than just reading along and typing in the code provided. &lt;/p&gt;
&lt;p&gt;My project idea is to create an app that will track and display various elements of my wellness practices and biometrics in one spot. For instance, I am using the Oura API to extract my nightly sleep metrics and plan to use WTForms to implement radio selectors for how I am feeling, as well as a text form to describe how I am feeling overall. I plan to use a calendar layout to be able to access individual days over time (likely using fullcalendar). I will also have a page for trends/insights.&lt;/p&gt;
&lt;p&gt;I’m also toying with the idea of incorporating a workout tracker within the app, so that I can track how sleep is impacting my workouts and consolidate some of the different apps and items I use each day into a one-stop shop. &lt;/p&gt;</content><category term="misc"></category></entry><entry><title>My Coding Journey So Far</title><link href="https://jpdesc.com/my-coding-journey-so-far.html" rel="alternate"></link><published>2022-03-17T00:00:00+00:00</published><updated>2022-03-17T00:00:00+00:00</updated><author><name>Jack DesCombes</name></author><id>tag:jpdesc.com,2022-03-17:/my-coding-journey-so-far.html</id><summary type="html">&lt;p&gt;Last fall, I quit my job working as a casualty insurance underwriter with the intention of making a career change. As I contemplated potential career paths for myself, I sought to boil my strengths and passions to their most basic elements. At my very core, I deeply enjoy building things …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last fall, I quit my job working as a casualty insurance underwriter with the intention of making a career change. As I contemplated potential career paths for myself, I sought to boil my strengths and passions to their most basic elements. At my very core, I deeply enjoy building things as well as the process of learning in and of itself. This base assessment informs my desire to become a software engineer, an endeavor in which learning and creation are inextricably linked. &lt;/p&gt;
&lt;p&gt;In college, I had taken two of Stanford’s introductory courses &lt;a href="https://web.stanford.edu/class/cs105/"&gt;CS 105&lt;/a&gt; and &lt;a href="https://web.stanford.edu/class/cs106a/"&gt;CS 106a&lt;/a&gt;. These gave me a taste of basic html/css/php as well as object-oriented programming in Java (now taught in Python). They were fast-paced and engaging (in the context of a 10 week quarter system, I suppose everything is). Although I studied &lt;a href="https://sts.stanford.edu"&gt;Science, Technology and Society&lt;/a&gt; as my major, the programming courses I had taken certainly piqued my interest in programming and left an indelible impact on my approaches to problem-solving. &lt;/p&gt;
&lt;p&gt;Shortly after beginning my learning journey last fall, I had the incredible fortune of meeting and beginning to work with a selfless mentor. Up to that point, I had been feeling the constant nagging itch that I had been going about learning things in the wrong order, or learning the wrong things altogether. Having the support and guidance of an experienced programmer as well as some level of accountability has been a game-changer.&lt;/p&gt;
&lt;p&gt;Prior to our meeting, I had been learning Python basics through &lt;a href="https://runestone.academy/ns/books/published/thinkcspy/index.html"&gt;How To Think Like a Computer Scientist&lt;/a&gt; as well as &lt;a href="https://www.udemy.com/course/complete-python-bootcamp/learn/lecture/20662956?start=15#content"&gt;Jose Portilla's Udemy Course&lt;/a&gt;. My mentor initially had me work through a fantastic book called &lt;a href="https://www.amazon.com/Think-UNIX-Jon-Lasser/dp/078972376X"&gt;Think Unix&lt;/a&gt;, which gave me a practical understanding of Unix, touching upon topics like shell scripting, networking, and a plethora of useful commands. &lt;/p&gt;
&lt;p&gt;From that point, I have completed &lt;a href="https://www.amazon.com/Learn-Python-Hard-Way-Introduction/dp/0134692888"&gt;Learn Python the Hard Way&lt;/a&gt; and &lt;a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/"&gt;MIT 6.0001&lt;/a&gt;, both of which have given me a strong foundation in basic Python/OOP, while also giving me an into to the Flask web framework. I am now working through &lt;a href="https://www.amazon.com/Flask-Web-Development-Developing-Applications/dp/1491991739"&gt;Miguel Grinberg's Flask Book&lt;/a&gt; as well as &lt;a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0002-introduction-to-computational-thinking-and-data-science-fall-2016/"&gt;MIT 6.0002&lt;/a&gt; to continue improving my skills in both Flask and Python. 6.0002 also touches on algorithms, which I am hoping will serve as a foundation for later books/courses on the topic while also improving my ability to create efficient programs. &lt;/p&gt;
&lt;p&gt;While this is a rather cursory overview of journey to this point, I'm looking forward to expanding upon specific topics in further detail. I look forward to being able to look back in a couple of years and track how my thoughts, goals and processes change over time. &lt;/p&gt;</content><category term="misc"></category></entry></feed>